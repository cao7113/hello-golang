# https://help.github.com/en/github/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions
name: CI
on:
  pull_request:
  workflow_call:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2.5.2
        with:
          version: v1.43
      #- name: Install golangci-lint
      #  run: |
      #    curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.43.0
      #    sudo mv bin/golangci-lint /usr/local/bin

    #  lint-container:
    #    name: Run lint in container
    #    runs-on: ubuntu-latest
    #    container: golangci/golangci-lint:v1.43
    #    steps:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Cache golang modules
        uses: actions/cache@v2
        env:
          cache-name: cached-go-build-mod
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Build
        run: go build -v ./...

  test:
    name: Test
    # Note: 18.04 has built mysql-5.7 service installed (not started)
    runs-on: ubuntu-18.04
    services:
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379
    steps:
    # https://github.com/actions/virtual-environments/blob/ubuntu20/20211129.1/images/linux/Ubuntu1804-README.md#mysql
    - name: Start MySQL5.7 Service
      run: |
        sudo systemctl start mysql.service
        mysql -uroot -proot -e "select version()"

    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Cache golang modules
      uses: actions/cache@v2
      env:
        cache-name: cached-go-build-mod
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-

    - name: Check DB service and init database
      run: |
        mysql -uroot -proot -e "CREATE DATABASE IF NOT EXISTS golang_test DEFAULT CHARACTER SET utf8mb4;"
        # https://github.com/golang-migrate/migrate/blob/master/cmd/migrate/README.md
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.1/migrate.linux-amd64.tar.gz | tar xvz
        ./migrate -path "db/migrations" -database "mysql://root:root@tcp(127.0.0.1:3306)/golang_test?parseTime=true" up

    - name: Test
      #run: go test -v ./...
      run: |
        rm -f .env.test
        echo redis service port is ${{ job.services.redis.ports[6379] }}
        go test $(go list ./... | grep -v -e /lab)
      env:
        APP_ENV: "test"
        DATABASE_URL: "root:root@tcp(127.0.0.1:3306)/golang_test?parseTime=true&multiStatements=true"
        REDIS_ADDR: "localhost:${{ job.services.redis.ports[6379] }}"
